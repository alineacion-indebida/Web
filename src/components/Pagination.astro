---
import NextIcon from "@/components/icons/NextIcon.astro"
import PrevIcon from "@/components/icons/PrevIcon.astro"

const { lengthPages, length, currentPage, firstUrl, prevUrl, nextUrl } = Astro.props
const paginationList = Array.from({ length }, (_, i) => i + 1)
const intLengthPages = Number.parseInt(lengthPages)

const firstPageList = currentPage - intLengthPages > 0 ? currentPage - intLengthPages - 1 : 0
const lastPageList = currentPage + intLengthPages < length ? currentPage + intLengthPages : length

---

<nav class="mt-12">
	<ol class="flex justify-center gap-3 text-xs font-medium">
		{
			prevUrl
			? (
				<li>
					<a
						href={prevUrl}
						class="inline-flex h-8 w-8 items-center justify-center rounded border border-gray-100 text-white hover:bg-accent hover:text-black hover:border-accent rtl:rotate-180"
					>
						<span class="sr-only">Prev Page</span>
						<PrevIcon />
					</a>
				</li>
			)
			: null
		}
		{
			paginationList?.slice(firstPageList, lastPageList).map(num => (
				<li>
					<a
						href={`${firstUrl}${num === 1 ? "" : `${num}`}`}
						class={`block h-8 w-8 rounded border text-center leading-8 text-white hover:bg-accent hover:text-black ${
							currentPage === num ? "border-accent" : "hover:border-accent"
						}`}
					>
						{num}
					</a>
				</li>
			))
		}
		{
			nextUrl
			? (
				<li>
					<a
						href={nextUrl}
						class="inline-flex h-8 w-8 items-center justify-center rounded border border-gray-100 text-white hover:bg-accent hover:text-black hover:border-accent rtl:rotate-180"
					>
						<span class="sr-only">Next Page</span>
						<NextIcon />
					</a>
				</li>
			)
			: null
		}
	</ol>
</nav>
